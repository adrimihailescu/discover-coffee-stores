import Head from "next/head";
import Banner from "../components/banner";
import Card from "../components/card";
import styles from "../styles/Home.module.css";
import Image from "next/dist/client/image";
import coffeeStoresData from "../data/coffee-stores.json";
import { fetchCoffeeStores } from "../lib/coffee-stores";
import useTrackLocation from "../hooks/use-track-location";
import { useEffect, useState, useContext } from "react";
import { ACTION_TYPES, StoreContext } from "../store/store-context";

//server side
export async function getStaticProps(context) {
	const coffeeStores = await fetchCoffeeStores();

	return {
		props: {
			coffeeStores: coffeeStores,
		},
	}; // will be passed to the page as props
}

export default function Home(props) {
	const { handleTrackLocation, locationErrorMsg, isFindingLocation } =
		useTrackLocation();

	const [coffeeStoresError, setCoffeeStoresError] = useState(null);

	const { dispatch, state } = useContext(StoreContext);

	const { coffeeStores, latLong } = state;

	useEffect(() => {
		async function setCoffeeStoresByLocation() {
			if (latLong) {
				try {
					const response = await fetch(
						`/api/getCoffeeStoresByLocation?latLong=${latLong}&limit=30`
					);

					const coffeeStores = await response.json();
					dispatch({
						type: ACTION_TYPES.SET_COFFEE_STORES,
						payload: {
							coffeeStores,
						},
					});
					setCoffeeStoresError("");
					//set coffee stores
				} catch (error) {
					//set error
					setCoffeeStoresError(error.message);
				}
			}
		}
		setCoffeeStoresByLocation();
	}, [dispatch, latLong]);

	const handleOnBannerBtnClick = () => {
		handleTrackLocation();
	};

	return (
		<div className={styles.container}>
			<Head>
				<title>Coffee Connoisseur</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={styles.main}>
				<Banner
					buttonText={isFindingLocation ? "Locating..." : "View stores nearby"}
					handleOnClick={handleOnBannerBtnClick}
				/>
				{locationErrorMsg && <p>Something went wrong: {locationErrorMsg}</p>}
				{coffeeStoresError && <p>Something went wrong: {coffeeStoresError}</p>}
				<div className={styles.heroImage}>
					<Image
						src="/static/hero-image.png"
						alt="A lady drinking coffee"
						width={700}
						height={400}
					/>
				</div>
				{coffeeStores.length > 0 && (
					<div className={styles.sectionWrapper}>
						<h2 className={styles.heading2}>Stores near me</h2>
						<div className={styles.cardLayout}>
							{coffeeStores.map((coffeeStore) => {
								return (
									<Card
										key={coffeeStore.id}
										name={coffeeStore.name}
										imgUrl={
											coffeeStore.imgUrl ||
											"https://images.unsplash.com/photo-1498804103079-a6351b050096?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80"
										}
										href={`/coffee-store/${coffeeStore.id}`}
										className={styles.card}
									/>
								);
							})}
						</div>
					</div>
				)}
				{props.coffeeStores.length > 0 && (
					<div className={styles.sectionWrapper}>
						<h2 className={styles.heading2}>Tooting stores</h2>
						<div className={styles.cardLayout}>
							{props.coffeeStores.map((coffeeStore) => {
								return (
									// eslint-disable-next-line react/jsx-key
									<Card
										key={coffeeStore.id}
										name={coffeeStore.name}
										imgUrl={
											coffeeStore.imgUrl ||
											"https://images.unsplash.com/photo-1498804103079-a6351b050096?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80"
										}
										href={`/coffee-store/${coffeeStore.id}`}
										className={styles.card}
									/>
								);
							})}
						</div>
					</div>
				)}
			</main>
		</div>
	);
}
